local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
local Window = OrionLib:MakeWindow({
    Name = "D.S.L Production's",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

local Main = Window:MakeTab({
    Name = "Hy - fling",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local killMethodDropdown = Main:AddDropdown({
    Name = "Selecionar Método De Kill",
    Default = "Couch",
    Options = {"Nenhum", "Couch"},
    Callback = function(value)
        if value == "Couch" then
            local args = {
                [1] = "PickingTools",
                [2] = "Couch"
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
            print('Hello!')
        elseif value == "Nenhum" then
            print("Nenhum método selecionado.")
        end
    end
})

local section = Main:AddSection({
    Name = "Matar Jogadores"
})

local playerService = game:GetService('Players')
local runService = game:GetService('RunService')
local localPlayer = playerService.LocalPlayer
local backpack = localPlayer:FindFirstChildOfClass('Backpack')

local flingV14Toggle = false
local selectedFlingPlayerV14 = nil
local flingV14Connection
local playerSpawnedConnection
local spinFlingConnection
local bodyThrust

local function getPlayerList()
    local playerList = {}
    for _, player in ipairs(playerService:GetPlayers()) do
        if player ~= localPlayer then
            table.insert(playerList, player.Name)
        end
    end
    return playerList
end

local function updateDropdown(dropdown)
    dropdown:Update(getPlayerList())
end

local function equipCouch()
    print("Tentando equipar o sofá...")
    if backpack then
        local couchItem = backpack:FindFirstChild("Couch")
        if couchItem then
            couchItem.Parent = localPlayer.Character
            local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:EquipTool(couchItem)
                print("Sofá equipado.")
            else
                print("Humanoide não encontrado.")
            end
        else
            warn("Sofá não encontrado na mochila.")
        end
    else
        print("Mochila não encontrada.")
    end
end

local function teleportToCoordinate()
    print("Teleportando para a coordenada...")
    local teleportPosition = Vector3.new(-340, 6, -146)
    localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(teleportPosition)
end

local function flingV14(targetPlayerName)
    local targetPlayer = playerService:FindFirstChild(targetPlayerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        flingV14Connection = runService.Heartbeat:Connect(function()
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local targetPosition = targetPlayer.Character.HumanoidRootPart.CFrame
                if toggle then
                    localPlayer.Character.HumanoidRootPart.CFrame = targetPosition * CFrame.new(0, 2, 0)
                else
                    localPlayer.Character.HumanoidRootPart.CFrame = targetPosition * CFrame.new(0, -1, 0)
                end
                toggle = not toggle
            end

            if targetPlayer.Character:FindFirstChild("Humanoid") and targetPlayer.Character.Humanoid.SeatPart then
                teleportToCoordinate()
                flingV14Connection:Disconnect()
                flingV14Connection = nil
            end
        end)
    else
        print("Jogador alvo não encontrado ou inválido.")
    end
end

local function onPlayerRespawned(targetPlayer)
    if flingV14Toggle then
        playerSpawnedConnection = targetPlayer.CharacterAdded:Connect(function()
            wait(0.0)
            if flingV14Toggle then
                equipCouch()
                flingV14(targetPlayer.Name)
            end
        end)
    end
end

local function ensureCouchEquipped()
    local character = localPlayer.Character
    if character then
        local equipped = false
        for _, tool in ipairs(character:GetChildren()) do
            if tool:IsA("Tool") and tool.Name == "Couch" then
                equipped = true
                break
            end
        end
        if not equipped then
            equipCouch()
        end
    else
        print("Personagem não encontrado.")
    end
end

local function disableCollisions(character)
    if character and character:FindFirstChild("Head") and character:FindFirstChild("UpperTorso") and character:FindFirstChild("LowerTorso") and character:FindFirstChild("HumanoidRootPart") then
        character.Head.CanCollide = false
        character.UpperTorso.CanCollide = false
        character.LowerTorso.CanCollide = false
        character.HumanoidRootPart.CanCollide = false
    else
        print("Parte do personagem não encontrada.")
    end
end

local function resetCollisions(character)
    if character and character:FindFirstChild("Head") and character:FindFirstChild("UpperTorso") and character:FindFirstChild("LowerTorso") and character:FindFirstChild("HumanoidRootPart") then
        character.Head.CanCollide = true
        character.UpperTorso.CanCollide = true
        character.LowerTorso.CanCollide = true
        character.HumanoidRootPart.CanCollide = true
    end
end

local function activateSpinFling()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local power = 300

    bodyThrust = Instance.new("BodyThrust")
    bodyThrust.Parent = character.HumanoidRootPart
    bodyThrust.Force = Vector3.new(power, 300, power)
    bodyThrust.Location = character.HumanoidRootPart.Position

    spinFlingConnection = runService.Stepped:Connect(function()
        disableCollisions(character)
    end)

    print("Spin Fling ativado!")
end

local function deactivateSpinFling()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()

    if spinFlingConnection then
        spinFlingConnection:Disconnect()
        spinFlingConnection = nil
    end

    if bodyThrust then
        bodyThrust:Destroy()
        bodyThrust = nil
    end

    resetCollisions(character)

    print("Spin Fling desativado!")
end

local function onFlingV14Toggle(value)
    print("Toggle Fling V14:", value)
    flingV14Toggle = value
    if flingV14Toggle and selectedFlingPlayerV14 then
        local targetPlayer = playerService:FindFirstChild(selectedFlingPlayerV14)
        if targetPlayer then
            ensureCouchEquipped()
            flingV14(targetPlayer.Name)
            onPlayerRespawned(targetPlayer)
            activateSpinFling()
        end
    elseif not flingV14Toggle then
        if flingV14Connection then
            flingV14Connection:Disconnect()
            flingV14Connection = nil
        end
        if playerSpawnedConnection then
            playerSpawnedConnection:Disconnect()
            playerSpawnedConnection = nil
        end
        deactivateSpinFling()
    end
end

local playerDropdownV14Toggle = Main:AddDropdown({
    Name = "Selecione o Jogador para Fling",
    Default = "",
    Options = getPlayerList(),
    Callback = function(playerName)
        selectedFlingPlayerV14 = playerName
        print("Jogador selecionado para Fling:", playerName)
    end
})

playerService.PlayerAdded:Connect(function()
    print("Novo jogador adicionado. Atualizando a lista...")
    updateDropdown(playerDropdownV14Toggle)
end)

playerService.PlayerRemoving:Connect(function()
    print("Jogador saiu. Atualizando a lista...")
    updateDropdown(playerDropdownV14Toggle)
end)

updateDropdown(playerDropdownV14Toggle)

local voidProtectionEnabled = false

local function ActivateVoidProtection()
    voidProtectionEnabled = true
    game.Workspace.FallenPartsDestroyHeight = 0/0
end

local function DeactivateVoidProtection()
    voidProtectionEnabled = false
    game.Workspace.FallenPartsDestroyHeight = 2048
end

OrionLib:Init()
